services:
  books_backend_service:
    image: books_image
    container_name: "books_backend_container"
    build:
      context: .
    networks:
      - books_network
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
    depends_on:
      books_db_service:
        condition: service_healthy

  books_db_service:
    image: postgres:17
    container_name: "books_db_container"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "6432:5432"
    networks:
      - books_network
    volumes:
      - books_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  books_nginx_service:
    image: nginx
    container_name: "books_nginx_container"
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - books_network
    depends_on:
      - books_backend_service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  books_network:
    external: true

volumes:
  books_data:
